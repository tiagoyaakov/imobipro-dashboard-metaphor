openapi: 3.0.0
info:
  title: ImobiPRO Agenda - n8n Integration API
  description: |
    API completa para integração do módulo de agenda do ImobiPRO com workflows n8n.
    
    Esta API fornece endpoints para automação de agendamentos, sincronização com calendários,
    notificações automáticas e integração com CRM para otimizar o fluxo de trabalho de corretores
    e imobiliárias.
    
    ## Funcionalidades Principais
    - Agendamento automatizado de visitas e reuniões
    - Sincronização bidirecional com Google Calendar
    - Verificação de disponibilidade em tempo real
    - Notificações automáticas via WhatsApp, Email e SMS
    - Gestão de conflitos e reagendamentos
    - Integração com pipeline de vendas do CRM
    
    ## Fluxos de Automação Suportados
    - Lead → Agendamento automático
    - Confirmações e lembretes automáticos
    - Reagendamentos por WhatsApp
    - Relatórios de produtividade
    - Sincronização multi-calendário
  version: 1.0.0
  contact:
    name: ImobiPRO API Support
    email: dev@imobipro.com
    url: https://imobipro.com/docs
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.imobipro.com/v1
    description: Servidor de Produção
  - url: https://staging-api.imobipro.com/v1
    description: Servidor de Staging
  - url: http://localhost:3000/api/v1
    description: Desenvolvimento Local

security:
  - ApiKeyAuth: []
  - WebhookSignature: []

paths:
  # ==============================================
  # WEBHOOKS ENDPOINTS (INCOMING - n8n → ImobiPRO)
  # ==============================================
  
  /webhooks/n8n/appointments:
    post:
      summary: Criar Agendamento via n8n
      description: |
        Webhook para receber solicitações de agendamento de workflows n8n.
        Usado para automações como:
        - Agendamento via chatbot WhatsApp
        - Formulários web de agendamento
        - CRM triggers para follow-up
      tags:
        - Webhooks Incoming
      operationId: createAppointmentWebhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentWebhookRequest'
            examples:
              whatsapp_booking:
                summary: Agendamento via WhatsApp
                value:
                  source: "whatsapp"
                  sourceId: "5511999998888"
                  appointmentData:
                    title: "Visita - Apartamento Centro"
                    type: "VISIT"
                    preferredDateTime: "2024-02-15T14:30:00Z"
                    alternativeDateTime: "2024-02-16T09:00:00Z"
                    duration: 60
                    contact:
                      name: "João Silva"
                      phone: "11999998888"
                      email: "joao@email.com"
                    property:
                      id: "prop_123"
                    agent:
                      id: "agent_456"
                    notes: "Cliente interessado em apartamentos de 2 quartos"
              crm_followup:
                summary: Follow-up automático CRM
                value:
                  source: "crm"
                  sourceId: "lead_789"
                  appointmentData:
                    title: "Reunião - Apresentação de Portfólio"
                    type: "MEETING"
                    preferredDateTime: "2024-02-20T10:00:00Z"
                    duration: 90
                    contact:
                      id: "contact_123"
                    agent:
                      id: "agent_456"
                    priority: "high"
                    autoConfirm: false
      responses:
        '201':
          description: Agendamento criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
        '409':
          description: Conflito de horário detectado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'

  /webhooks/n8n/appointments/availability:
    post:
      summary: Verificar Disponibilidade
      description: |
        Webhook para verificação rápida de disponibilidade de agentes.
        Retorna slots disponíveis para otimizar agendamentos automáticos.
      tags:
        - Webhooks Incoming
      operationId: checkAvailabilityWebhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityRequest'
      responses:
        '200':
          description: Disponibilidade verificada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityResponse'

  /webhooks/n8n/appointments/{appointmentId}/reschedule:
    put:
      summary: Reagendar Compromisso
      description: |
        Webhook para processar solicitações de reagendamento via n8n.
        Comum em fluxos de WhatsApp e email automático.
      tags:
        - Webhooks Incoming
      operationId: rescheduleAppointmentWebhook
      parameters:
        - name: appointmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RescheduleRequest'
      responses:
        '200':
          description: Reagendamento processado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
        '409':
          description: Novo horário indisponível
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictResponse'

  /webhooks/n8n/appointments/{appointmentId}/cancel:
    put:
      summary: Cancelar Compromisso
      description: |
        Webhook para cancelamento de compromissos via automações n8n.
      tags:
        - Webhooks Incoming
      operationId: cancelAppointmentWebhook
      parameters:
        - name: appointmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRequest'
      responses:
        '200':
          description: Cancelamento processado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'

  /webhooks/n8n/agents/assignment:
    post:
      summary: Atribuição Automática de Agente
      description: |
        Webhook para automação de atribuição de agentes baseada em:
        - Disponibilidade
        - Especialização (tipo de imóvel)
        - Localização geográfica
        - Carga de trabalho atual
      tags:
        - Webhooks Incoming
      operationId: assignAgentWebhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentAssignmentRequest'
      responses:
        '200':
          description: Agente atribuído com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentAssignmentResponse'

  # ==============================================
  # TRIGGER ENDPOINTS (OUTGOING - ImobiPRO → n8n)
  # ==============================================

  /triggers/appointments/created:
    post:
      summary: Trigger - Novo Agendamento Criado
      description: |
        Endpoint chamado pelo ImobiPRO quando um novo agendamento é criado.
        Usado para disparar automações como:
        - Envio de confirmação por WhatsApp
        - Adição ao Google Calendar
        - Notificação para o agente
        - Atualização do CRM
      tags:
        - Triggers Outgoing
      operationId: appointmentCreatedTrigger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentTriggerPayload'
      responses:
        '200':
          description: Trigger processado
        '500':
          description: Erro no processamento do trigger

  /triggers/appointments/updated:
    post:
      summary: Trigger - Agendamento Atualizado
      description: |
        Disparado quando um agendamento é modificado (reagendado, status alterado, etc.)
      tags:
        - Triggers Outgoing
      operationId: appointmentUpdatedTrigger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentUpdateTriggerPayload'
      responses:
        '200':
          description: Trigger processado

  /triggers/appointments/cancelled:
    post:
      summary: Trigger - Agendamento Cancelado
      description: |
        Disparado quando um agendamento é cancelado para:
        - Notificar cliente via WhatsApp/SMS
        - Liberar slot no Google Calendar
        - Atualizar métricas de cancelamento
      tags:
        - Triggers Outgoing
      operationId: appointmentCancelledTrigger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentCancelTriggerPayload'
      responses:
        '200':
          description: Trigger processado

  /triggers/availability/changed:
    post:
      summary: Trigger - Disponibilidade de Agente Alterada
      description: |
        Disparado quando a disponibilidade de um agente muda para:
        - Reprocessar agendamentos pendentes
        - Otimizar agenda automaticamente
        - Notificar clientes em fila de espera
      tags:
        - Triggers Outgoing
      operationId: availabilityChangedTrigger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityChangeTriggerPayload'
      responses:
        '200':
          description: Trigger processado

  /triggers/conflicts/detected:
    post:
      summary: Trigger - Conflito de Agenda Detectado
      description: |
        Disparado quando conflitos são detectados para:
        - Resolução automática de conflitos
        - Notificação imediata ao agente
        - Reagendamento proativo
      tags:
        - Triggers Outgoing
      operationId: conflictDetectedTrigger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConflictTriggerPayload'
      responses:
        '200':
          description: Trigger processado

  /triggers/calendar/sync:
    post:
      summary: Trigger - Evento de Sincronização
      description: |
        Disparado para sincronização com calendários externos:
        - Google Calendar sync
        - Outlook integration
        - Apple Calendar sync
      tags:
        - Triggers Outgoing
      operationId: calendarSyncTrigger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarSyncTriggerPayload'
      responses:
        '200':
          description: Sincronização processada

  # ==============================================
  # STANDARD REST ENDPOINTS
  # ==============================================

  /appointments:
    get:
      summary: Listar Agendamentos
      description: Lista agendamentos com filtros avançados para integração n8n
      tags:
        - Appointments
      operationId: listAppointments
      parameters:
        - name: agentId
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/AppointmentStatus'
        - name: dateFrom
          in: query
          schema:
            type: string
            format: date-time
        - name: dateTo
          in: query
          schema:
            type: string
            format: date-time
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/AppointmentType'
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Lista de agendamentos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentListResponse'

    post:
      summary: Criar Agendamento
      description: Cria novo agendamento com validação automática de conflitos
      tags:
        - Appointments
      operationId: createAppointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppointmentRequest'
      responses:
        '201':
          description: Agendamento criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
        '409':
          description: Conflito de horário
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictResponse'

  /appointments/{appointmentId}:
    get:
      summary: Obter Agendamento
      description: Detalhes completos de um agendamento específico
      tags:
        - Appointments
      operationId: getAppointment
      parameters:
        - name: appointmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalhes do agendamento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentDetailResponse'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: Atualizar Agendamento
      description: Atualiza agendamento existente com validação de conflitos
      tags:
        - Appointments
      operationId: updateAppointment
      parameters:
        - name: appointmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppointmentRequest'
      responses:
        '200':
          description: Agendamento atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'

    delete:
      summary: Excluir Agendamento
      description: Remove agendamento permanentemente
      tags:
        - Appointments
      operationId: deleteAppointment
      parameters:
        - name: appointmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Agendamento excluído
        '404':
          $ref: '#/components/responses/NotFound'

  /agents/{agentId}/availability:
    get:
      summary: Obter Disponibilidade do Agente
      description: |
        Retorna slots de disponibilidade do agente para período específico.
        Considera:
        - Agendamentos existentes
        - Horário de trabalho configurado
        - Bloqueios manuais
        - Sincronização com calendários externos
      tags:
        - Availability
      operationId: getAgentAvailability
      parameters:
        - name: agentId
          in: path
          required: true
          schema:
            type: string
        - name: dateFrom
          in: query
          required: true
          schema:
            type: string
            format: date
          example: "2024-02-15"
        - name: dateTo
          in: query
          required: true
          schema:
            type: string
            format: date
          example: "2024-02-21"
        - name: duration
          in: query
          description: Duração em minutos para buscar slots disponíveis
          schema:
            type: integer
            minimum: 15
            maximum: 480
            default: 60
        - name: slotInterval
          in: query
          description: Intervalo entre slots em minutos
          schema:
            type: integer
            minimum: 15
            maximum: 60
            default: 30
      responses:
        '200':
          description: Disponibilidade do agente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentAvailabilityResponse'

    post:
      summary: Definir/Atualizar Disponibilidade
      description: |
        Define ou atualiza a disponibilidade do agente.
        Permite configurar:
        - Horários de trabalho regulares
        - Bloqueios temporários
        - Exceções de agenda
      tags:
        - Availability
      operationId: setAgentAvailability
      parameters:
        - name: agentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAvailabilityRequest'
      responses:
        '200':
          description: Disponibilidade atualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityUpdateResponse'

  /health:
    get:
      summary: Health Check
      description: |
        Endpoint de verificação de saúde da API.
        Inclui status de dependências:
        - Banco de dados
        - Serviços de calendário
        - Filas de processamento
      tags:
        - Monitoring
      operationId: healthCheck
      responses:
        '200':
          description: API saudável
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: Serviço indisponível
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /metrics:
    get:
      summary: Métricas da API
      description: |
        Métricas para monitoramento de performance e uso.
        Para integração com sistemas de monitoramento n8n.
      tags:
        - Monitoring
      operationId: getMetrics
      responses:
        '200':
          description: Métricas da API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: |
        Chave de API para autenticação.
        Obtenha sua chave em: https://app.imobipro.com/settings/api-keys
    
    WebhookSignature:
      type: apiKey
      in: header
      name: X-Webhook-Signature
      description: |
        Assinatura HMAC-SHA256 para verificação de integridade do webhook.
        Calculada usando o secret configurado no n8n.

  schemas:
    # ==============================================
    # ENUMS
    # ==============================================
    
    AppointmentType:
      type: string
      enum:
        - VISIT
        - MEETING
        - CALL
        - OTHER
      description: |
        Tipos de agendamento:
        - VISIT: Visita a imóvel
        - MEETING: Reunião presencial
        - CALL: Ligação telefônica
        - OTHER: Outros tipos
    
    AppointmentStatus:
      type: string
      enum:
        - CONFIRMED
        - PENDING
        - COMPLETED
        - CANCELED
      description: |
        Status do agendamento:
        - CONFIRMED: Confirmado por ambas as partes
        - PENDING: Aguardando confirmação
        - COMPLETED: Concluído
        - CANCELED: Cancelado
    
    Priority:
      type: string
      enum:
        - low
        - medium
        - high
        - urgent
      description: Prioridade do agendamento
    
    Source:
      type: string
      enum:
        - whatsapp
        - web_form
        - crm
        - manual
        - calendar_sync
        - api
      description: Origem do agendamento
    
    ConflictResolution:
      type: string
      enum:
        - reschedule_existing
        - reject_new
        - manual_review
      description: Estratégia de resolução de conflitos

    # ==============================================
    # REQUEST SCHEMAS
    # ==============================================
    
    AppointmentWebhookRequest:
      type: object
      required:
        - source
        - appointmentData
      properties:
        source:
          $ref: '#/components/schemas/Source'
        sourceId:
          type: string
          description: ID da fonte original (ex: número WhatsApp, ID do lead)
          example: "5511999998888"
        appointmentData:
          $ref: '#/components/schemas/AppointmentData'
        webhookId:
          type: string
          description: ID único do webhook para deduplicação
        retryCount:
          type: integer
          minimum: 0
          maximum: 5
          default: 0
          description: Contador de tentativas de reprocessamento
        metadata:
          type: object
          additionalProperties: true
          description: Metadados adicionais específicos da fonte
    
    AppointmentData:
      type: object
      required:
        - title
        - type
        - preferredDateTime
      properties:
        title:
          type: string
          maxLength: 200
          example: "Visita - Apartamento Centro"
        description:
          type: string
          maxLength: 1000
          example: "Visita ao apartamento de 2 quartos no centro da cidade"
        type:
          $ref: '#/components/schemas/AppointmentType'
        preferredDateTime:
          type: string
          format: date-time
          example: "2024-02-15T14:30:00Z"
        alternativeDateTime:
          type: string
          format: date-time
          example: "2024-02-16T09:00:00Z"
          description: Horário alternativo caso o preferido não esteja disponível
        duration:
          type: integer
          minimum: 15
          maximum: 480
          default: 60
          description: Duração em minutos
        priority:
          $ref: '#/components/schemas/Priority'
        autoConfirm:
          type: boolean
          default: false
          description: Se deve confirmar automaticamente sem validação manual
        conflictResolution:
          $ref: '#/components/schemas/ConflictResolution'
        contact:
          oneOf:
            - $ref: '#/components/schemas/ContactReference'
            - $ref: '#/components/schemas/NewContactData'
        property:
          $ref: '#/components/schemas/PropertyReference'
        agent:
          $ref: '#/components/schemas/AgentReference'
        notes:
          type: string
          maxLength: 2000
          example: "Cliente interessado em apartamentos de 2 quartos"
        tags:
          type: array
          items:
            type: string
          example: ["urgente", "primeira_visita", "lead_qualificado"]
        customFields:
          type: object
          additionalProperties: true
          description: Campos personalizados específicos da imobiliária
    
    ContactReference:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          example: "contact_123"
    
    NewContactData:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          maxLength: 100
          example: "João Silva"
        phone:
          type: string
          pattern: '^[\+]?[1-9]\d{1,14}$'
          example: "11999998888"
        email:
          type: string
          format: email
          example: "joao@email.com"
        document:
          type: string
          example: "123.456.789-00"
        notes:
          type: string
          maxLength: 500
    
    PropertyReference:
      type: object
      properties:
        id:
          type: string
          example: "prop_123"
        externalId:
          type: string
          description: ID externo do imóvel (ex: código do site)
    
    AgentReference:
      type: object
      properties:
        id:
          type: string
          example: "agent_456"
        autoAssign:
          type: boolean
          default: false
          description: Se deve atribuir automaticamente o melhor agente disponível
        assignmentCriteria:
          $ref: '#/components/schemas/AgentAssignmentCriteria'
    
    AgentAssignmentCriteria:
      type: object
      properties:
        propertyType:
          type: string
          description: Tipo de imóvel para match com especialização
        location:
          type: string
          description: Localização geográfica
        priority:
          $ref: '#/components/schemas/Priority'
        workload:
          type: string
          enum: [low, balanced, any]
          description: Preferência de carga de trabalho do agente
    
    AvailabilityRequest:
      type: object
      required:
        - agentIds
        - dateFrom
        - dateTo
      properties:
        agentIds:
          type: array
          items:
            type: string
          example: ["agent_123", "agent_456"]
        dateFrom:
          type: string
          format: date-time
          example: "2024-02-15T00:00:00Z"
        dateTo:
          type: string
          format: date-time
          example: "2024-02-21T23:59:59Z"
        duration:
          type: integer
          minimum: 15
          maximum: 480
          default: 60
        slotInterval:
          type: integer
          minimum: 15
          maximum: 60
          default: 30
        appointmentType:
          $ref: '#/components/schemas/AppointmentType'
        location:
          type: string
          description: Localização para calcular tempo de deslocamento
    
    RescheduleRequest:
      type: object
      required:
        - newDateTime
        - reason
      properties:
        newDateTime:
          type: string
          format: date-time
          example: "2024-02-16T15:00:00Z"
        alternativeDateTime:
          type: string
          format: date-time
        reason:
          type: string
          maxLength: 500
          example: "Cliente solicitou mudança devido compromisso profissional"
        notifyParties:
          type: boolean
          default: true
          description: Se deve notificar automaticamente as partes envolvidas
        source:
          $ref: '#/components/schemas/Source'
        requestedBy:
          type: string
          enum: [client, agent, system]
    
    CancelRequest:
      type: object
      required:
        - reason
      properties:
        reason:
          type: string
          maxLength: 500
          example: "Cliente desistiu da compra"
        canceledBy:
          type: string
          enum: [client, agent, system]
        notifyParties:
          type: boolean
          default: true
        rescheduleOffered:
          type: boolean
          default: false
          description: Se foi oferecida opção de reagendamento
        compensationOffered:
          type: boolean
          default: false
          description: Se foi oferecida compensação (ex: desconto)
    
    AgentAssignmentRequest:
      type: object
      required:
        - appointmentData
      properties:
        appointmentData:
          $ref: '#/components/schemas/AppointmentData'
        assignmentCriteria:
          $ref: '#/components/schemas/AgentAssignmentCriteria'
        excludeAgents:
          type: array
          items:
            type: string
          description: IDs de agentes a serem excluídos da atribuição
        requireConfirmation:
          type: boolean
          default: true
          description: Se requer confirmação do agente antes da atribuição final
    
    CreateAppointmentRequest:
      type: object
      required:
        - title
        - date
        - agentId
        - contactId
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 1000
        date:
          type: string
          format: date-time
        duration:
          type: integer
          minimum: 15
          maximum: 480
          default: 60
        type:
          $ref: '#/components/schemas/AppointmentType'
        priority:
          $ref: '#/components/schemas/Priority'
        agentId:
          type: string
        contactId:
          type: string
        propertyId:
          type: string
        notes:
          type: string
          maxLength: 2000
        tags:
          type: array
          items:
            type: string
        customFields:
          type: object
          additionalProperties: true
        autoConfirm:
          type: boolean
          default: false
        sendNotifications:
          type: boolean
          default: true
    
    UpdateAppointmentRequest:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 1000
        date:
          type: string
          format: date-time
        duration:
          type: integer
          minimum: 15
          maximum: 480
        type:
          $ref: '#/components/schemas/AppointmentType'
        status:
          $ref: '#/components/schemas/AppointmentStatus'
        priority:
          $ref: '#/components/schemas/Priority'
        agentId:
          type: string
        contactId:
          type: string
        propertyId:
          type: string
        notes:
          type: string
          maxLength: 2000
        tags:
          type: array
          items:
            type: string
        customFields:
          type: object
          additionalProperties: true
        sendNotifications:
          type: boolean
          default: true
    
    SetAvailabilityRequest:
      type: object
      required:
        - dateFrom
        - dateTo
        - availableSlots
      properties:
        dateFrom:
          type: string
          format: date
        dateTo:
          type: string
          format: date
        availableSlots:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilitySlot'
        workingHours:
          $ref: '#/components/schemas/WorkingHours'
        blockedPeriods:
          type: array
          items:
            $ref: '#/components/schemas/BlockedPeriod'
        exceptions:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityException'
    
    AvailabilitySlot:
      type: object
      required:
        - startTime
        - endTime
      properties:
        startTime:
          type: string
          format: time
          example: "09:00"
        endTime:
          type: string
          format: time
          example: "18:00"
        dayOfWeek:
          type: integer
          minimum: 1
          maximum: 7
          description: 1=Segunda, 7=Domingo
        date:
          type: string
          format: date
          description: Para slots específicos de uma data
        slotDuration:
          type: integer
          minimum: 15
          maximum: 120
          default: 60
        bufferTime:
          type: integer
          minimum: 0
          maximum: 60
          default: 15
          description: Tempo de buffer entre agendamentos em minutos

    # ==============================================
    # RESPONSE SCHEMAS
    # ==============================================
    
    AppointmentResponse:
      type: object
      properties:
        id:
          type: string
          example: "apt_789"
        title:
          type: string
          example: "Visita - Apartamento Centro"
        description:
          type: string
        date:
          type: string
          format: date-time
          example: "2024-02-15T14:30:00Z"
        duration:
          type: integer
          example: 60
        type:
          $ref: '#/components/schemas/AppointmentType'
        status:
          $ref: '#/components/schemas/AppointmentStatus'
        priority:
          $ref: '#/components/schemas/Priority'
        agent:
          $ref: '#/components/schemas/AgentSummary'
        contact:
          $ref: '#/components/schemas/ContactSummary'
        property:
          $ref: '#/components/schemas/PropertySummary'
        notes:
          type: string
        tags:
          type: array
          items:
            type: string
        customFields:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        calendarSyncStatus:
          $ref: '#/components/schemas/CalendarSyncStatus'
        notifications:
          $ref: '#/components/schemas/NotificationStatus'
    
    ConflictResponse:
      type: object
      properties:
        error:
          type: string
          example: "SCHEDULE_CONFLICT"
        message:
          type: string
          example: "Conflito de horário detectado"
        conflictDetails:
          type: object
          properties:
            conflictingAppointments:
              type: array
              items:
                $ref: '#/components/schemas/AppointmentSummary'
            suggestedAlternatives:
              type: array
              items:
                $ref: '#/components/schemas/AlternativeSlot'
            resolutionOptions:
              type: array
              items:
                type: string
                enum: [reschedule_existing, reject_new, manual_review]
        retryAfter:
          type: integer
          description: Tempo em segundos para tentar novamente
    
    AvailabilityResponse:
      type: object
      properties:
        agentAvailability:
          type: array
          items:
            $ref: '#/components/schemas/AgentAvailabilitySlots'
        dateRange:
          type: object
          properties:
            from:
              type: string
              format: date-time
            to:
              type: string
              format: date-time
        requestedDuration:
          type: integer
        totalSlotsFound:
          type: integer
        generatedAt:
          type: string
          format: date-time
    
    AgentAvailabilitySlots:
      type: object
      properties:
        agentId:
          type: string
        agentName:
          type: string
        availableSlots:
          type: array
          items:
            $ref: '#/components/schemas/TimeSlot'
        workload:
          type: object
          properties:
            current:
              type: integer
              description: Número de agendamentos atuais
            capacity:
              type: integer
              description: Capacidade máxima
            utilizationRate:
              type: number
              format: float
              minimum: 0
              maximum: 1
    
    TimeSlot:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        available:
          type: boolean
        reason:
          type: string
          description: Motivo se não disponível
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confiança na disponibilidade (considerando sincronizações)
    
    AgentAssignmentResponse:
      type: object
      properties:
        assignedAgent:
          $ref: '#/components/schemas/AgentSummary'
        assignmentScore:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Score de compatibilidade do agente
        assignmentReason:
          type: string
          description: Explicação da escolha do agente
        alternativeAgents:
          type: array
          items:
            type: object
            properties:
              agent:
                $ref: '#/components/schemas/AgentSummary'
              score:
                type: number
                format: float
              reason:
                type: string
        requiresConfirmation:
          type: boolean
        estimatedResponse:
          type: string
          description: Tempo estimado de resposta do agente
    
    AppointmentListResponse:
      type: object
      properties:
        appointments:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentSummary'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'
        filters:
          type: object
          description: Filtros aplicados na consulta
        statistics:
          type: object
          properties:
            total:
              type: integer
            byStatus:
              type: object
              properties:
                confirmed:
                  type: integer
                pending:
                  type: integer
                completed:
                  type: integer
                canceled:
                  type: integer
            byType:
              type: object
              properties:
                visit:
                  type: integer
                meeting:
                  type: integer
                call:
                  type: integer
                other:
                  type: integer
    
    AppointmentDetailResponse:
      allOf:
        - $ref: '#/components/schemas/AppointmentResponse'
        - type: object
          properties:
            history:
              type: array
              items:
                $ref: '#/components/schemas/AppointmentHistoryEntry'
            relatedAppointments:
              type: array
              items:
                $ref: '#/components/schemas/AppointmentSummary'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentInfo'
            feedback:
              $ref: '#/components/schemas/AppointmentFeedback'
    
    AgentAvailabilityResponse:
      type: object
      properties:
        agentId:
          type: string
        dateRange:
          type: object
          properties:
            from:
              type: string
              format: date
            to:
              type: string
              format: date
        workingHours:
          $ref: '#/components/schemas/WorkingHours'
        availableSlots:
          type: array
          items:
            $ref: '#/components/schemas/TimeSlot'
        blockedPeriods:
          type: array
          items:
            $ref: '#/components/schemas/BlockedPeriod'
        appointmentCount:
          type: integer
        utilizationRate:
          type: number
          format: float
        lastSyncAt:
          type: string
          format: date-time
          description: Última sincronização com calendário externo
    
    AvailabilityUpdateResponse:
      type: object
      properties:
        success:
          type: boolean
        updatedSlots:
          type: integer
        conflictsDetected:
          type: array
          items:
            type: string
        syncScheduled:
          type: boolean
          description: Se foi agendada sincronização com calendários externos
        nextSyncAt:
          type: string
          format: date-time
    
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
          example: "1.0.0"
        uptime:
          type: integer
          description: Uptime em segundos
        dependencies:
          type: object
          properties:
            database:
              $ref: '#/components/schemas/DependencyStatus'
            googleCalendar:
              $ref: '#/components/schemas/DependencyStatus'
            redis:
              $ref: '#/components/schemas/DependencyStatus'
            messageQueue:
              $ref: '#/components/schemas/DependencyStatus'
        metrics:
          type: object
          properties:
            requestsPerMinute:
              type: number
            averageResponseTime:
              type: number
            errorRate:
              type: number
            activeConnections:
              type: integer
    
    MetricsResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        period:
          type: string
          example: "1h"
        appointments:
          type: object
          properties:
            total:
              type: integer
            created:
              type: integer
            completed:
              type: integer
            canceled:
              type: integer
            rescheduled:
              type: integer
        api:
          type: object
          properties:
            totalRequests:
              type: integer
            successRate:
              type: number
              format: float
            averageResponseTime:
              type: number
            errorsByType:
              type: object
              additionalProperties:
                type: integer
        webhooks:
          type: object
          properties:
            delivered:
              type: integer
            failed:
              type: integer
            retries:
              type: integer
            averageDeliveryTime:
              type: number
        calendar:
          type: object
          properties:
            syncEvents:
              type: integer
            syncErrors:
              type: integer
            lastSuccessfulSync:
              type: string
              format: date-time

    # ==============================================
    # TRIGGER PAYLOAD SCHEMAS
    # ==============================================
    
    AppointmentTriggerPayload:
      type: object
      properties:
        event:
          type: string
          enum: [appointment.created]
        timestamp:
          type: string
          format: date-time
        data:
          $ref: '#/components/schemas/AppointmentResponse'
        metadata:
          type: object
          properties:
            triggeredBy:
              type: string
            source:
              $ref: '#/components/schemas/Source'
            workflowId:
              type: string
            retryCount:
              type: integer
    
    AppointmentUpdateTriggerPayload:
      type: object
      properties:
        event:
          type: string
          enum: [appointment.updated, appointment.rescheduled, appointment.status_changed]
        timestamp:
          type: string
          format: date-time
        data:
          $ref: '#/components/schemas/AppointmentResponse'
        changes:
          type: object
          properties:
            previous:
              type: object
              description: Valores anteriores dos campos alterados
            current:
              type: object
              description: Valores atuais dos campos alterados
        metadata:
          $ref: '#/components/schemas/TriggerMetadata'
    
    AppointmentCancelTriggerPayload:
      type: object
      properties:
        event:
          type: string
          enum: [appointment.cancelled]
        timestamp:
          type: string
          format: date-time
        data:
          $ref: '#/components/schemas/AppointmentResponse'
        cancellation:
          type: object
          properties:
            reason:
              type: string
            canceledBy:
              type: string
            cancellationTime:
              type: string
              format: date-time
            refundEligible:
              type: boolean
        metadata:
          $ref: '#/components/schemas/TriggerMetadata'
    
    AvailabilityChangeTriggerPayload:
      type: object
      properties:
        event:
          type: string
          enum: [availability.changed, availability.blocked, availability.opened]
        timestamp:
          type: string
          format: date-time
        data:
          type: object
          properties:
            agentId:
              type: string
            affectedSlots:
              type: array
              items:
                $ref: '#/components/schemas/TimeSlot'
            changeType:
              type: string
              enum: [manual, automatic, sync]
            impactedAppointments:
              type: array
              items:
                type: string
              description: IDs de agendamentos afetados
        metadata:
          $ref: '#/components/schemas/TriggerMetadata'
    
    ConflictTriggerPayload:
      type: object
      properties:
        event:
          type: string
          enum: [conflict.detected, conflict.resolved]
        timestamp:
          type: string
          format: date-time
        data:
          type: object
          properties:
            conflictId:
              type: string
            severity:
              type: string
              enum: [low, medium, high, critical]
            conflictingAppointments:
              type: array
              items:
                type: string
            resolutionRequired:
              type: boolean
            autoResolutionAttempted:
              type: boolean
            suggestedActions:
              type: array
              items:
                type: string
        metadata:
          $ref: '#/components/schemas/TriggerMetadata'
    
    CalendarSyncTriggerPayload:
      type: object
      properties:
        event:
          type: string
          enum: [calendar.sync.started, calendar.sync.completed, calendar.sync.failed]
        timestamp:
          type: string
          format: date-time
        data:
          type: object
          properties:
            syncId:
              type: string
            calendarProvider:
              type: string
              enum: [google, outlook, apple]
            agentId:
              type: string
            eventsProcessed:
              type: integer
            eventsCreated:
              type: integer
            eventsUpdated:
              type: integer
            eventsDeleted:
              type: integer
            errors:
              type: array
              items:
                type: object
                properties:
                  eventId:
                    type: string
                  error:
                    type: string
                  severity:
                    type: string
        metadata:
          $ref: '#/components/schemas/TriggerMetadata'

    # ==============================================
    # SUPPORTING SCHEMAS
    # ==============================================
    
    AgentSummary:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        specializations:
          type: array
          items:
            type: string
        rating:
          type: number
          format: float
        availability:
          type: string
          enum: [available, busy, unavailable]
    
    ContactSummary:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        phone:
          type: string
        email:
          type: string
        category:
          type: string
          enum: [CLIENT, LEAD, PARTNER]
    
    PropertySummary:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        address:
          type: string
        type:
          type: string
          enum: [APARTMENT, HOUSE, COMMERCIAL, LAND, OTHER]
        price:
          type: number
        status:
          type: string
          enum: [AVAILABLE, SOLD, RESERVED]
    
    AppointmentSummary:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        date:
          type: string
          format: date-time
        duration:
          type: integer
        type:
          $ref: '#/components/schemas/AppointmentType'
        status:
          $ref: '#/components/schemas/AppointmentStatus'
        agentName:
          type: string
        contactName:
          type: string
        propertyTitle:
          type: string
    
    AlternativeSlot:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        agentId:
          type: string
        confidence:
          type: number
          format: float
        reason:
          type: string
    
    WorkingHours:
      type: object
      properties:
        monday:
          $ref: '#/components/schemas/DaySchedule'
        tuesday:
          $ref: '#/components/schemas/DaySchedule'
        wednesday:
          $ref: '#/components/schemas/DaySchedule'
        thursday:
          $ref: '#/components/schemas/DaySchedule'
        friday:
          $ref: '#/components/schemas/DaySchedule'
        saturday:
          $ref: '#/components/schemas/DaySchedule'
        sunday:
          $ref: '#/components/schemas/DaySchedule'
    
    DaySchedule:
      type: object
      properties:
        enabled:
          type: boolean
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time
        breakTimes:
          type: array
          items:
            type: object
            properties:
              startTime:
                type: string
                format: time
              endTime:
                type: string
                format: time
    
    BlockedPeriod:
      type: object
      properties:
        id:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        reason:
          type: string
        recurring:
          type: boolean
        recurrencePattern:
          type: string
          enum: [daily, weekly, monthly]
    
    AvailabilityException:
      type: object
      properties:
        date:
          type: string
          format: date
        available:
          type: boolean
        customHours:
          $ref: '#/components/schemas/DaySchedule'
        reason:
          type: string
    
    CalendarSyncStatus:
      type: object
      properties:
        googleCalendar:
          $ref: '#/components/schemas/SyncStatus'
        outlookCalendar:
          $ref: '#/components/schemas/SyncStatus'
        appleCalendar:
          $ref: '#/components/schemas/SyncStatus'
    
    SyncStatus:
      type: object
      properties:
        enabled:
          type: boolean
        lastSync:
          type: string
          format: date-time
        nextSync:
          type: string
          format: date-time
        status:
          type: string
          enum: [synced, pending, error, disabled]
        errorMessage:
          type: string
    
    NotificationStatus:
      type: object
      properties:
        whatsapp:
          $ref: '#/components/schemas/NotificationDeliveryStatus'
        email:
          $ref: '#/components/schemas/NotificationDeliveryStatus'
        sms:
          $ref: '#/components/schemas/NotificationDeliveryStatus'
        push:
          $ref: '#/components/schemas/NotificationDeliveryStatus'
    
    NotificationDeliveryStatus:
      type: object
      properties:
        sent:
          type: boolean
        deliveredAt:
          type: string
          format: date-time
        readAt:
          type: string
          format: date-time
        error:
          type: string
        retryCount:
          type: integer
    
    AppointmentHistoryEntry:
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
          format: date-time
        action:
          type: string
          enum: [created, updated, rescheduled, confirmed, completed, cancelled]
        performedBy:
          type: string
        details:
          type: object
          additionalProperties: true
        previousValues:
          type: object
          additionalProperties: true
    
    AttachmentInfo:
      type: object
      properties:
        id:
          type: string
        filename:
          type: string
        mimeType:
          type: string
        size:
          type: integer
        url:
          type: string
        uploadedAt:
          type: string
          format: date-time
        uploadedBy:
          type: string
    
    AppointmentFeedback:
      type: object
      properties:
        rating:
          type: integer
          minimum: 1
          maximum: 5
        comment:
          type: string
        completedOnTime:
          type: boolean
        wouldRecommend:
          type: boolean
        submittedAt:
          type: string
          format: date-time
        submittedBy:
          type: string
    
    PaginationInfo:
      type: object
      properties:
        currentPage:
          type: integer
        totalPages:
          type: integer
        totalItems:
          type: integer
        itemsPerPage:
          type: integer
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean
    
    DependencyStatus:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        responseTime:
          type: number
          description: Tempo de resposta em ms
        lastCheck:
          type: string
          format: date-time
        error:
          type: string
    
    TriggerMetadata:
      type: object
      properties:
        triggeredBy:
          type: string
        source:
          $ref: '#/components/schemas/Source'
        workflowId:
          type: string
        retryCount:
          type: integer
        correlationId:
          type: string
        environment:
          type: string
          enum: [production, staging, development]

    # ==============================================
    # ERROR SCHEMAS
    # ==============================================
    
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        code:
          type: string
        timestamp:
          type: string
          format: date-time
        path:
          type: string
        requestId:
          type: string
        details:
          type: object
          additionalProperties: true
    
    ValidationError:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            validationErrors:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                  code:
                    type: string
                  message:
                    type: string
                  value:
                    type: string

  responses:
    BadRequest:
      description: Requisição inválida
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "BAD_REQUEST"
            message: "Parâmetros da requisição inválidos"
            code: "400"
            timestamp: "2024-02-15T10:30:00Z"
            path: "/api/v1/webhooks/n8n/appointments"
            requestId: "req_123456"
    
    Unauthorized:
      description: Não autorizado - API key inválida ou ausente
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "UNAUTHORIZED"
            message: "API key inválida ou ausente"
            code: "401"
            timestamp: "2024-02-15T10:30:00Z"
    
    NotFound:
      description: Recurso não encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "NOT_FOUND"
            message: "Agendamento não encontrado"
            code: "404"
            timestamp: "2024-02-15T10:30:00Z"
    
    ValidationError:
      description: Erro de validação dos dados
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
          example:
            error: "VALIDATION_ERROR"
            message: "Dados inválidos fornecidos"
            code: "422"
            timestamp: "2024-02-15T10:30:00Z"
            validationErrors:
              - field: "date"
                code: "invalid_format"
                message: "Formato de data inválido"
                value: "2024-02-30"
              - field: "agentId"
                code: "required"
                message: "ID do agente é obrigatório"

  examples:
    # ==============================================
    # WEBHOOK EXAMPLES
    # ==============================================
    
    WhatsAppBookingExample:
      summary: Agendamento via WhatsApp
      description: Exemplo de webhook recebido de um workflow n8n de agendamento via WhatsApp
      value:
        source: "whatsapp"
        sourceId: "5511999998888@c.us"
        webhookId: "wh_n8n_12345"
        appointmentData:
          title: "Visita - Apartamento Jardins"
          description: "Cliente interessado em apartamento de 3 quartos"
          type: "VISIT"
          preferredDateTime: "2024-02-20T14:00:00Z"
          alternativeDateTime: "2024-02-21T10:00:00Z"
          duration: 60
          priority: "medium"
          autoConfirm: false
          contact:
            name: "Maria Silva"
            phone: "11999998888"
            email: "maria@email.com"
          property:
            id: "prop_jardins_123"
          agent:
            autoAssign: true
            assignmentCriteria:
              propertyType: "APARTMENT"
              location: "Jardins"
              workload: "balanced"
          notes: "Cliente já visitou 2 imóveis similares, demonstrou interesse real"
          tags: ["whatsapp", "lead_qualificado", "prioridade_media"]
        metadata:
          chatId: "5511999998888@c.us"
          workflowExecutionId: "exec_n8n_789"
          previousInteractions: 3
    
    CRMFollowUpExample:
      summary: Follow-up automático do CRM
      description: Agendamento automático baseado em trigger do CRM
      value:
        source: "crm"
        sourceId: "lead_crm_456"
        webhookId: "wh_crm_67890"
        appointmentData:
          title: "Reunião - Apresentação de Portfólio"
          description: "Lead qualificado, ready para apresentação"
          type: "MEETING"
          preferredDateTime: "2024-02-22T15:30:00Z"
          duration: 90
          priority: "high"
          autoConfirm: false
          contact:
            id: "contact_existing_789"
          agent:
            id: "agent_specialist_123"
          notes: "Lead score: 85/100. Orçamento: R$ 500k-800k. Prazo: 3 meses"
          tags: ["crm_auto", "lead_hot", "high_value"]
          customFields:
            leadScore: 85
            budget: "500000-800000"
            timeline: "3_months"
            source_campaign: "google_ads_apartments"
        metadata:
          crmLeadId: "crm_lead_456"
          campaignId: "campaign_123"
          leadSource: "google_ads"

tags:
  - name: Webhooks Incoming
    description: |
      Endpoints para receber dados de workflows n8n.
      Estes webhooks permitem que automações n8n enviem dados para o ImobiPRO.
  
  - name: Triggers Outgoing
    description: |
      Endpoints que o ImobiPRO chama para disparar workflows n8n.
      Usados para notificar o n8n sobre eventos no sistema.
  
  - name: Appointments
    description: |
      Operações CRUD completas para agendamentos.
      Incluem validação de conflitos e sincronização automática.
  
  - name: Availability
    description: |
      Gestão de disponibilidade de agentes.
      Suporte a múltiplos calendários e sincronização em tempo real.
  
  - name: Monitoring
    description: |
      Endpoints de monitoramento e métricas.
      Para health checks e observabilidade do sistema.

# ==============================================
# WEBHOOK SIGNATURE VERIFICATION
# ==============================================
# 
# Para webhooks seguros, use HMAC-SHA256:
# 1. Configure um secret no n8n workflow
# 2. Calcule: HMAC-SHA256(payload, secret)
# 3. Envie no header: X-Webhook-Signature: sha256=<hash>
# 4. ImobiPRO validará a assinatura antes de processar
#
# Exemplo em n8n:
# ```javascript
# const crypto = require('crypto');
# const payload = JSON.stringify($json);
# const secret = '{{$env.IMOBIPRO_WEBHOOK_SECRET}}';
# const signature = 'sha256=' + crypto
#   .createHmac('sha256', secret)
#   .update(payload)
#   .digest('hex');
# 
# return {
#   headers: {
#     'X-Webhook-Signature': signature,
#     'Content-Type': 'application/json'
#   },
#   body: payload
# };
# ```

# ==============================================
# RATE LIMITING
# ==============================================
# 
# Limites por API key:
# - Webhooks: 100 req/min
# - REST API: 1000 req/min  
# - Triggers: 500 req/min
# 
# Headers de resposta:
# - X-RateLimit-Limit: Limite máximo
# - X-RateLimit-Remaining: Requests restantes
# - X-RateLimit-Reset: Timestamp do reset
# 
# Status 429 quando limite excedido

# ==============================================
# RETRY MECHANISM
# ==============================================
# 
# Para webhooks falhados:
# - Retry automático: 3 tentativas
# - Backoff exponencial: 1s, 4s, 16s
# - Dead letter queue após 3 falhas
# - Webhook de falha crítica enviado ao n8n
# 
# Headers para controle:
# - X-Retry-Count: Número da tentativa
# - X-Retry-After: Tempo para próxima tentativa

# ==============================================
# ENVIRONMENT URLS
# ==============================================
# 
# Desenvolvimento: http://localhost:3000/api/v1
# Staging: https://staging-api.imobipro.com/v1  
# Produção: https://api.imobipro.com/v1
# 
# Webhook URLs n8n:
# - Incoming: https://n8n.imobipro.com/webhook/[workflow-id]
# - Triggers: Configurado por workflow específico

# ==============================================
# AUTHENTICATION SETUP
# ==============================================
# 
# 1. Obtenha API key em: https://app.imobipro.com/settings/api
# 2. Configure no n8n como Header:
#    - Name: X-API-Key
#    - Value: sua_api_key_aqui
# 3. Para webhooks, adicione também:
#    - Name: X-Webhook-Signature  
#    - Value: sha256=<calculated_hmac>